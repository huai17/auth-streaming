#user  nobody;
worker_processes auto;

events {
  worker_connections 4000;
}

rtmp {
  server {
    listen 1935; # Listen on standard RTMP port
    notify_method get;

    chunk_size 4096;

    application live {
      live on;
      hls on;

      on_publish http://localhost:8081/broadcast;

      hls_path /tmp/hls;
      hls_fragment 2;
      hls_playlist_length 30;
      deny play all;
    }
  }
}

http {
  sendfile off;
  tcp_nopush on;
  directio 512;
  default_type application/octet-stream;

  access_log off;
  error_log off;

  server {
    listen 80;
    server_name localhost;
    root /tmp/;
    # Disable cache
    add_header 'Cache-Control' 'no-cache';

    types {
      application/vnd.apple.mpegurl m3u8;
      video/mp2t ts;
    }

    location /video {
      rewrite /hls/([a-zA-Z0-9_\-]*)/([0-9]*)/(.*)\.(ts|m3u8)$ /hls/$3.$4?token=$1&exp=$2;
      root /tmp/not-exist;
    }

    location ~ ^/hls/(.*)\.(ts|m3u8)$ {
      internal;
      # The secure link is base on the folowing format
      # MD5("EXPIREY_DATE_IN_SECONDS CLIENT_IP_ADDRESS SECRET")
      # here is a BASH function that generates a secure link
      # get_token() {
      #   local expires="$(date -d "today + 30 minutes" +%s)";
      #   local token="$(echo -n "${expires} 127.0.0.1 VERY_COOL_SECRET" | openssl md5 -binary | openssl base64 | tr +/ -_ | tr -d =)"
      #   echo "${token}/${expires}"
      # }
      # echo "https://example.com/video/hls/$(get_token)/live.m3u8"

      secure_link $arg_token,$arg_exp;
      secure_link_md5 "$secure_link_expires $1 put_your_secret_here";
      if ($secure_link = "") {
        return 403;
      }
      if ($secure_link = "0") {
        return 410;
      }

      # # Referrer protection
      # valid_referers server_names;
      # if ($invalid_referer) {
      #     return 403;
      # }

      # allow CORS preflight requests
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }
  }
}
